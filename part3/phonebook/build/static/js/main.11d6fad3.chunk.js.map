{"version":3,"sources":["services/phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","defaultFunctions","getAll","axios","get","then","response","data","create","newObj","post","update","id","put","remove","delete","Filter","filter","handleFilterChange","value","onChange","AddNewPerson","newPerson","handleNameChange","handleNumberChange","handleClick","name","number","type","onClick","People","persons","deletePerson","map","person","handleDelete","Number","Notification","message","className","App","useState","setPersons","setNewPerson","setFilter","notification","setNotification","useEffect","personService","initialPersons","filteredPersons","length","toLowerCase","includes","e","target","Math","max","o","preventDefault","returnedPerson","concat","catch","error","errorString","substring","indexOf","setTimeout","find","window","confirm","removedPerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11d6fad3.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst create = (newObj) => {\n\tconst request = axios.post(baseUrl, newObj)\n\treturn request.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObj)\n\treturn request.then(response => response.data)\n\n}\n\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(response => response.data)\n}\n\nconst defaultFunctions = { getAll, create, update, remove }\n\nexport default defaultFunctions","import React, { useState, useEffect } from 'react'\nimport personService from './services/phonebook'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newPerson, setNewPerson ] = useState({name: '', number: ''})\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({ type: '', message: null })\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (e) => {\n    setNewPerson({ ...newPerson, name: e.target.value, id: Math.max(...persons.map(o => o.id)) + 1 })\n  }\n\n  const handleNumberChange = (e) => {\n    setNewPerson({ ...newPerson, number: e.target.value, id: Math.max(...persons.map(o => o.id)) + 1 })\n  }\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value)\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    /*\n    if ( persons.find(person => person.name.toLowerCase() === newPerson.name.toLowerCase()) ) {\n      if ( window.confirm(`${newPerson.name} has already been added to the phonebook, replace the old number with a new one`) ) {\n        const id = persons.find(person => person.name.toLowerCase() === newPerson.name.toLowerCase()).id\n        personService\n          .update(id, newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n          })\n      }\n      setNewPerson({name: '', number: ''})\n\n    } else {*/\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewPerson({name: '', number: ''})\n      })\n      .catch(error => {\n        const errorString = error.response.data.substring(error.response.data.indexOf('ValidationError: ') + 17, error.response.data.indexOf(' Value: '))\n        \n        setNotification({ type: 'error', message: `${errorString}` })\n        setTimeout(() => {\n         setNotification({ type: '', message: null })\n        }, 5000)\n      })\n    //}\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if ( window.confirm(`Do you want to delete ${person.name} from the phonebook?`) ) {\n      personService\n        .remove(id)\n        .then(removedPerson => {\n          setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n\n  const filteredPersons = ( filter.length > 0 ) ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase())) : persons\n\n  return (\n    <div>\n      <Notification type={notification.type} message={notification.message} />\n      <h2>Phonebook</h2>\n      <Filter \n        filter={filter} \n        handleFilterChange={handleFilterChange} \n      />\n      <h2>add a new</h2>\n      <AddNewPerson \n        newPerson={newPerson} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange} \n        handleClick={handleClick}\n      />\n      <h2>Numbers</h2>\n      <People \n        persons={filteredPersons}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nconst Filter = ({ filter, handleFilterChange }) => <form><div>filter shown with: <input value={filter} onChange={handleFilterChange} /></div></form>\n\nconst AddNewPerson = ({ newPerson, handleNameChange, handleNumberChange, handleClick }) => {\n  return (\n    <>\n    <form>\n      <div>name: <input value={newPerson.name} onChange={handleNameChange} /></div>\n      <div>number: <input value={newPerson.number} onChange={handleNumberChange} /></div>\n      <div><button type=\"submit\" onClick={handleClick}>add</button></div>\n    </form>\n    </>\n  )\n}\n\nconst People = ({ persons, deletePerson}) => {\n  return (\n    <>\n    {\n      persons.map(person => \n        <Number \n          key={person.id} \n          person={person}\n          handleDelete={() => deletePerson(person.id)}\n        />\n      )\n    }\n    </>\n  )\n}\n\nconst Number = ({ person, handleDelete }) => <p>{person.name} {person.number} <button onClick={handleDelete}>delete</button></p> \n\nconst Notification = ({ type, message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}